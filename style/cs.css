.bg-c-black {
    background: var(--color-light-gray);
}

.bg-c-yellow {
    background: var(--color-dark-yellow);
}

.bg-c-light-black {
    background: var(--color-light-black);
}

.bg-c-back-btn{
    background: var(--color-back-btn);;
}

.bg-c-gray-2 {
    background: var(--color-gray-2);
}

.bg-c-gray-3{
    background: var(--color-gray);
}

.bg-c-lighten-gray{
    background: var(--color-lighten-gray);
}

.bg-c-lightest-gray{
    background: var(--color-lightest-gray);
}

.bg-c-creame-yellow {
    background: var(--color-creame-yellow);
}

.bg-c-dark-gray {
    background: var(--color-dark-gray);
}

.bg-c-light-white {
    background: var(--color-light-white);
}

.text-c-white{
    color: var(--color-white);
}

.text-c-black {
    color: var(--color-light-gray);
}

.text-c-yellow {
    color: var(--color-dark-yellow);
}
.text-link-blue{
    color: var(--color-link-blue);
}
.text-c-green {
    color: var(--color-green);
}
.text-c-sky{
    color: var(--color-light-sky);
}


.text-c-light-black {
    color: var(--color-light-black);
}

.text-c-gray-2 {
    color: var(--color-gray-2);
}

.text-c-dark-gray {
    color: var(--color-dark-gray);
}

.text-c-light-white {
    color: var(--color-light-white);
}

.hover-text-c-yellow:hover {
    color: var(--color-dark-yellow);
}

.hover-bg-c-black:hover {
    background: var(--color-light-gray);
}

.hover-bg-c-yellow:hover {
    background: var(--color-dark-yellow);
}

.bg-light-pink {
    background: var(--color-light-pink);
}

.border-c-gray{
  border-color: var(--color-gray);
}

.border-c-sky{
    border-color: var(--color-light-sky);
}

.border-c-yellow {
    border-color: var(--color-dark-yellow);
}

.bg-c-gray-3{
    background: var(--bg-light-gray);
}

body.cs {
    overflow-x: hidden;
}

.cs .main {
    background: url('/images/main-bg.png');
    background-size: cover;
    background-position: center;
    overflow: scroll;

}

@media (width > 768px) {
    .cs .main {
        /* max-height: calc(100vh - 60px); */
        max-height: calc(100vh);
    }
}

@media (width < 767.98px) {
    .cs .main {
        /* max-height: calc(100vh - 45px); */
        max-height: calc(100vh);
    }
}

.cs .taskbar {
    background: url('/images/taskbar-bg.svg');
    background-size: cover;
    background-position: center;
}

.cs .bg-system{
    background: url('/images/system.png');
    background-size: cover;
    background-position: center;
}

.cs div[role="dialog"] {
    padding: 20px 10px;
}

.cs div[role="dialog"] .modal-content {
    max-height: 90vh;
    overflow: scroll;
}

.cs div[role="dialog"] .modal-content::-webkit-scrollbar,
.cs .main::-webkit-scrollbar,
.cs-table-container::-webkit-scrollbar,
.hide-scrollbar::-webkit-scrollbar {
    display: none;
}

@media (width < 768px) {
    .cs-table-container {
        overflow-y: scroll;
        overflow-x:scroll ;
    }

    .cs-table-container table {
        min-width: 1000px;
    }
}

.cs .main .content {
    min-width: 320px;
}

.cs .toggle-bg {
    background: #DCDCDC;
    border: 1px solid var(--color-gray-3);
}

.cs .toggle-switch input:checked~.dot {
    transform: translateX(118%);
    background: #F9F9F9;
}

.cs .toggle-switch input:checked~.toggle-bg {
    background: var(--color-dark-yellow);
}
.cs .dropdown-option {
    display: none;
    background-color: #F9F9F9;
}

.cs  .tooltip {
    display: none;
}
.cs .has-tooltip:hover ~ .tooltip {
    display: block;
}
.cs .dropdown-btn:focus~.dropdown-option,
.dropdown-option:hover {
    display: block;
}

.cs .radio-button input {
    display: none;
    white-space: nowrap;
}

.cs .radio-button span {
    min-width: 80px;
}


.cs .radio-button input:checked~span {
    background: #FDCF01;
    color: #000;
}

/* file specific */

.cs #tab-holder {
    position: relative;
}

.cs #tab-holder .tab-content {
    padding-bottom: 1rem;
}

.cs #tab-holder input.tab-manager[type="radio"] {
    position: absolute;
    left: -100%;
    top: -100%;
    height: 0;
    display: none;
}

.cs #tab-holder input.tab-manager[type="radio"]+div.content-holder>label.tab-label {
    float: left;
    margin-right: 1rem;
    cursor: pointer;
}

.cs #tab-holder input.tab-manager[type="radio"]+div.content-holder>div.tab-content {
    position: absolute;
    width: 100%;
    display: none;
}

.cs #tab-holder input.tab-manager[type="radio"]:checked+div.content-holder>div.tab-content {
    display: block;
}

.cs #tab-holder input.tab-manager[type="radio"]:checked+div.content-holder>label.tab-label {
    border-bottom: 2px solid var(--color-dark-yellow);
}

.cs #tab-holder .tab-content form input[type="checkbox"]:checked+label {
    background: var(--color-dark-yellow);
    color: var(--color-light-gray);
}

.cs button {
    white-space: nowrap;
}


/*multiple select -  css override*/
.ui.selection.dropdown {
    border-radius: 7px !important;
}

.ui.label {
    background-color: #fff !important;
    border-radius: 10px !important;
}

/* js tab controlled */
.tab-control {
    border-bottom: 2px solid transparent;
}

.tab-control.active {
    border-color: var(--color-dark-yellow);
    font-weight: bold;
}

.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
}

/* no dark outline on input focus */
.cs input:focus,
.cs textarea:focus,
.cs select:focus{
    outline: none;
}

/* checkbox with yellow border */
.cs input[type="checkbox"].c-checkbox {
    accent-color: var(--color-dark-yellow);
}
.cs input[type="checkbox"].c-checkbox {
    appearance: none;
    -webkit-appearance: none;
    display: flex;
    align-content: center;
    justify-content: center;
    font-size: 2rem;
    padding: 0.1rem;
    width: 15px;
    cursor: pointer;
    position: relative;
    height: 15px;
    border: 2px solid var(--color-dark-yellow);
    border-radius: 2px;
}
/* .cs input[type="checkbox"].c-checkbox:checked{
    background-color: var(--color-dark-yellow);
} */
.cs input[type="checkbox"].c-checkbox:checked::after {
    content: "âœ”";
    font-size: 10px;
    position: absolute;
    height: 12px;
    top: -4.5px;
    left: 2px;
}

.cs select option:checked,
.cs select option:hover,
.cs select:focus > option:checked {
    box-shadow: 0 0 10px 100px var(--color-dark-yellow) inset;
}